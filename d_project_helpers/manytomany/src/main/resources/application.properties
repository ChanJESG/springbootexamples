# Set up connection string to the database
spring.datasource.url=jdbc:mysql://localhost:<port number, e.g. 3306>/<DATABASE-NAME>

# Username and password to access the above database
spring.datasource.username=<MYSQL-SERVER-USERNAME>
spring.datasource.password=<MYSQL-SERVER-PASSWORD>


# Optional: Spring Boot can gather the necessary from the database connection URL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Shows the query when jpa queries are executed
spring.jpa.show-sql = true

# update = Updates the schema when the app restarts
# create-drop = Drop the table and recreate
spring.jpa.hibernate.ddl-auto=create-drop

# Format the SQL queries generated by Hibernate
spring.jpa.properties.hibernate.format_sql=true

#set a custom port number (default: 8080, change it to an unused port number - if required)
server.port=8080

# Note:
# For those who prefer to use H2 in-memory database for unit testing
# comment out the above application properties meant for MySQL AND remove the comments below (lines 31 - 41)
# 'sa' for username and password is the default username and password for H2 DB

#spring.datasource.url = jdbc:h2://mem:db;DB_CLOSE_DELAY=-1
#spring.datasource.username = sa
#spring.datasource.password = sa
#spring.datasource.driver-class-name = org.h2.Driver
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
#jpa.properties.show-sql = true
#
##JPA settings
#jpa.hibernate.ddl-auto = create-drop